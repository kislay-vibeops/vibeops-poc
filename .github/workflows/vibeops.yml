name: VibeOps Build & Deploy

on:
  repository_dispatch:
    types: [vibeops-build]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-west-2
      ACCOUNT_ID: 618214385848
      TENANT_ID:  ${{ github.event.client_payload.tenant_id }}
      DEPLOY_ID:  ${{ github.event.client_payload.deployment_id }}
      RUNTIME:    ${{ github.event.client_payload.runtime }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::618214385848:role/GitHubDeployRoleTemplate
          aws-region:     ${{ env.AWS_REGION }}

      - name: List files in project directory
        run: ls -l

      - name: Show contents of package.json
        run: cat package.json



      - name: Confirm and show tsconfig.json
        run: |
          if [ -f tsconfig.json ]; then
            echo '--- tsconfig.json ---'
            cat tsconfig.json
            echo '--- end tsconfig ---'
          else
            echo 'ERROR: tsconfig.json not found!' >&2
            exit 1
          fi

      - name: Confirm sst.config.ts exists once
        run: |
          echo 'Looking for sst.config.ts (maxdepth 2)...'
          set -e
          count=$(find . -maxdepth 2 -name 'sst.config.ts' | tee /dev/stderr | wc -l)
          if [ "$count" -ne 1 ]; then
            echo "ERROR: Expected exactly one sst.config.ts, found $count" >&2
            exit 1
          fi

      - name: Show sst.config.ts
        run: |
          echo '--- ./sst.config.ts ---'
          cat ./sst.config.ts
          echo '--- end config ---'

      - name: Clean SST cache
        run: rm -rf .sst

      # Optional: clean lockfile only if you're intentionally forcing fresh deps
      # - name: Clean old lock file
      #   run: rm -f package-lock.json

      - name: Clean node_modules
        run: rm -rf node_modules

      - name: Install deps
        run: npm install --no-fund --no-audit --verbose

      - name: List node_modules
        run: ls -l node_modules


      - name: SST Build (debug)
        run: npx sst build --verbose || true

      - name: Dump compiled SST config (.sst/platform)
        run: |
          echo '--- Compiled sst.config.*.mjs ---'
          cat .sst/platform/*.mjs || echo 'No compiled config found'
          echo '--- End compiled config ---'

      - name: SST Deploy
        run: npx sst deploy --stage prod --verbose --print-logs true

      - name: Show SST Deploy Log
        if: failure()
        run: cat .sst/outputs/deploy.log || echo "No deploy log found"
