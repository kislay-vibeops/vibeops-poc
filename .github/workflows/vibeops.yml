name: VibeOps Build & Deploy
on:
  repository_dispatch:
    types: [vibeops-build]

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-west-2
      ACCOUNT_ID: 618214385848
      TENANT_ID:  ${{ github.event.client_payload.tenant_id }}
      DEPLOY_ID:  ${{ github.event.client_payload.deployment_id }}
      RUNTIME:    ${{ github.event.client_payload.runtime }}

    steps:
    - uses: actions/checkout@v4            # 1  source repo
    - uses: actions/setup-node@v4          # 2  Node 20
      with: { node-version: 20 }

    - uses: aws-actions/configure-aws-credentials@v4   # 3  OIDC
      with:
        role-to-assume: arn:aws:iam::618214385848:role/GitHubDeployRoleTemplate
        aws-region:     ${{ env.AWS_REGION }}

    # 4  build/push image (container runtime only) …

    - uses: actions/checkout@v4            # 5  infra repo/branch
      with:
        repository: kislay007/vibeops-client-infra
        ref: dpl/${{ env.DEPLOY_ID }}
        token: ${{ secrets.VIBEOPS_INFRA_READ }}
        path: infra

    # 5½  —— copy app source ——
    - name: Copy app source into infra/app
      run: |
        mkdir -p infra/app
        rsync -a --exclude '.git' --exclude 'infra' ./ infra/app/

    # Debug: List files in infra directory
    - name: List files in infra directory
      run: ls -l infra

    # Debug: Show contents of infra/package.json
    - name: Show contents of infra/package.json
      run: cat infra/package.json

    - name: Show contents of infra/stacks/App.ts
      run: cat infra/stacks/App.ts

    # Debug: Confirm tsconfig.json exists and print it
    - name: Confirm and show tsconfig.json
      run: |
        if [ -f infra/tsconfig.json ]; then
          echo '--- infra/tsconfig.json ---'
          cat infra/tsconfig.json
          echo '--- end tsconfig ---'
        else
          echo 'ERROR: infra/tsconfig.json not found!' >&2
          exit 1
        fi

    # 7½  confirm exactly one sst.config.ts
    - name: Confirm sst.config.ts exists once
      run: |
        echo 'Looking for sst.config.ts (maxdepth 2)...'
        set -e
        count=$(find . -maxdepth 2 -name 'sst.config.ts' | tee /dev/stderr | wc -l)
        if [ "$count" -ne 1 ]; then
          echo "ERROR: Expected exactly one sst.config.ts, found $count" >&2
          exit 1
        fi

    - name: Show sst.config.ts
      run: |
        if [ -f ./infra/sst.config.ts ]; then
          echo '--- ./infra/sst.config.ts ---'
          cat ./infra/sst.config.ts
          echo '--- end config ---'
        else
          echo 'No ./infra/sst.config.ts found'
        fi

    # Clean up any old lock file to avoid version pinning
    - name: Clean old lock file
      working-directory: infra
      run: rm -f package-lock.json

    # 8  install deps
    - name: Clean node_modules
      working-directory: infra
      run: rm -rf node_modules

    - name: Install deps
      working-directory: infra
      run: |
        npm install --no-fund --no-audit --verbose

    # Debug: List node_modules in infra after install
    - name: List node_modules in infra
      run: ls -l infra/node_modules

    # Debug: Check SST version
    - name: Check SST version
      working-directory: infra
      run: npx sst version

    # Debug: Try SST build (for more verbose error if deploy fails)
    - name: SST Build (debug)
      working-directory: infra
      run: npx sst build --verbose || true

    - name: SST Deploy
      working-directory: infra
      run: npx sst deploy --stage prod --verbose --print-logs true

    - name: Show SST Deploy Log
      if: failure()
      run: cat infra/.sst/outputs/deploy.log || echo "No deploy log found"